"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const fs_1 = require("fs");
const G = require("glob");
const moment = require("moment");
const nodemailer_1 = require("nodemailer");
const path_1 = require("path");
/* tslint:disable:no-console */
const config = JSON.parse(fs_1.readFileSync(path_1.join(__dirname, '..', 'config', 'config.json')).toString());
const transporter = nodemailer_1.createTransport({
    auth: {
        pass: config.smtp.pass,
        user: config.smtp.user
    },
    host: 'smtp.gmail.com',
    secure: true
});
transporter.verify((err) => {
    if (err) {
        throw err;
    }
});
setTimeout(() => {
    const now = moment();
    const start = moment(now).subtract(20, 'seconds');
    const end = moment(now).add(10, 'seconds');
    const glob = path_1.join(__dirname, '..', 'database', 'images') +
        '/@(' + start.format('YYYYMMDD-HHmmss').substr(0, 14) +
        '|' + now.format('YYYYMMDD-HHmmss').substr(0, 14) +
        '|' + end.format('YYYYMMDD-HHmmss').substr(0, 14) + ')*.jpg';
    console.log(start, now, end, glob);
    G(glob, {}, (err, files) => {
        if (err) {
            throw err;
        }
        if (files.length > 20) {
            files = files.slice(files.length - 20, files.length - 1);
        }
        if (files.length === 0) {
            return;
        }
        const message = {
            attachments: files.map((file) => {
                return {
                    filename: path_1.basename(file),
                    path: file
                };
            }),
            from: config.smtp.user,
            subject: '[Motion] ' + now.toISOString(),
            text: JSON.stringify(files, null, 2),
            to: config.allowedEmails
        };
        transporter.sendMail(message, (sendErr, info) => {
            if (sendErr) {
                throw sendErr;
            }
            console.log(info);
        });
        fs_1.writeFileSync(path_1.join(__dirname, '..', 'database', 'events', (new Date()).getTime().toString()), JSON.stringify(files));
    });
}, 10000);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXZlbnQuanMiLCJzb3VyY2VSb290IjoiLi9zcmMvIiwic291cmNlcyI6WyJldmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLDJCQUErQztBQUMvQywwQkFBMEI7QUFDMUIsaUNBQWlDO0FBQ2pDLDJDQUEyQztBQUMzQywrQkFBb0M7QUFFcEMsK0JBQStCO0FBRS9CLE1BQU0sTUFBTSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsaUJBQVksQ0FBQyxXQUFJLENBQUMsU0FBUyxFQUFFLElBQUksRUFBRSxRQUFRLEVBQUUsYUFBYSxDQUFDLENBQUMsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxDQUFDO0FBRW5HLE1BQU0sV0FBVyxHQUFHLDRCQUFlLENBQUM7SUFDbEMsSUFBSSxFQUFFO1FBQ0osSUFBSSxFQUFFLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSTtRQUN0QixJQUFJLEVBQUUsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJO0tBQ3ZCO0lBQ0QsSUFBSSxFQUFFLGdCQUFnQjtJQUN0QixNQUFNLEVBQUUsSUFBSTtDQUNiLENBQUMsQ0FBQztBQUVILFdBQVcsQ0FBQyxNQUFNLENBQUMsQ0FBQyxHQUFHLEVBQUUsRUFBRTtJQUN6QixJQUFJLEdBQUcsRUFBRTtRQUNQLE1BQU0sR0FBRyxDQUFDO0tBQ1g7QUFDSCxDQUFDLENBQUMsQ0FBQztBQUVILFVBQVUsQ0FBQyxHQUFHLEVBQUU7SUFDZCxNQUFNLEdBQUcsR0FBRyxNQUFNLEVBQUUsQ0FBQztJQUVyQixNQUFNLEtBQUssR0FBRyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsUUFBUSxDQUFDLEVBQUUsRUFBRSxTQUFTLENBQUMsQ0FBQztJQUNsRCxNQUFNLEdBQUcsR0FBRyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEVBQUUsRUFBRSxTQUFTLENBQUMsQ0FBQztJQUUzQyxNQUFNLElBQUksR0FBRyxXQUFJLENBQUMsU0FBUyxFQUFFLElBQUksRUFBRSxVQUFVLEVBQUUsUUFBUSxDQUFDO1FBQ3RELEtBQUssR0FBRyxLQUFLLENBQUMsTUFBTSxDQUFDLGlCQUFpQixDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUM7UUFDckQsR0FBRyxHQUFHLEdBQUcsQ0FBQyxNQUFNLENBQUMsaUJBQWlCLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQztRQUNqRCxHQUFHLEdBQUcsR0FBRyxDQUFDLE1BQU0sQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLEdBQUcsUUFBUSxDQUFDO0lBRS9ELE9BQU8sQ0FBQyxHQUFHLENBQUMsS0FBSyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFFbkMsQ0FBQyxDQUFDLElBQUksRUFBRSxFQUFFLEVBQUUsQ0FBQyxHQUFHLEVBQUUsS0FBSyxFQUFFLEVBQUU7UUFDekIsSUFBSSxHQUFHLEVBQUU7WUFDUCxNQUFNLEdBQUcsQ0FBQztTQUNYO1FBRUQsSUFBSSxLQUFLLENBQUMsTUFBTSxHQUFHLEVBQUUsRUFBRTtZQUNyQixLQUFLLEdBQUcsS0FBSyxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsTUFBTSxHQUFHLEVBQUUsRUFBRSxLQUFLLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDO1NBQzFEO1FBRUQsSUFBSSxLQUFLLENBQUMsTUFBTSxLQUFLLENBQUMsRUFBRTtZQUN0QixPQUFPO1NBQ1I7UUFFRCxNQUFNLE9BQU8sR0FBRztZQUNkLFdBQVcsRUFBRSxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsSUFBSSxFQUFFLEVBQUU7Z0JBQzlCLE9BQU87b0JBQ0wsUUFBUSxFQUFFLGVBQVEsQ0FBQyxJQUFJLENBQUM7b0JBQ3hCLElBQUksRUFBRSxJQUFJO2lCQUNYLENBQUM7WUFDSixDQUFDLENBQUM7WUFDRixJQUFJLEVBQUUsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJO1lBQ3RCLE9BQU8sRUFBRSxXQUFXLEdBQUcsR0FBRyxDQUFDLFdBQVcsRUFBRTtZQUN4QyxJQUFJLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxLQUFLLEVBQUUsSUFBSSxFQUFFLENBQUMsQ0FBQztZQUNwQyxFQUFFLEVBQUUsTUFBTSxDQUFDLGFBQWE7U0FDekIsQ0FBQztRQUVGLFdBQVcsQ0FBQyxRQUFRLENBQUMsT0FBTyxFQUFFLENBQUMsT0FBTyxFQUFFLElBQUksRUFBRSxFQUFFO1lBQzlDLElBQUksT0FBTyxFQUFFO2dCQUNYLE1BQU0sT0FBTyxDQUFDO2FBQ2Y7WUFFRCxPQUFPLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3BCLENBQUMsQ0FBQyxDQUFDO1FBRUgsa0JBQWEsQ0FDWCxXQUFJLENBQ0YsU0FBUyxFQUNULElBQUksRUFDSixVQUFVLEVBQ1YsUUFBUSxFQUNSLENBQUMsSUFBSSxJQUFJLEVBQUUsQ0FBQyxDQUFDLE9BQU8sRUFBRSxDQUFDLFFBQVEsRUFBRSxDQUNsQyxFQUNELElBQUksQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztJQUMzQixDQUFDLENBQUMsQ0FBQztBQUNMLENBQUMsRUFBRSxLQUFLLENBQUMsQ0FBQyJ9